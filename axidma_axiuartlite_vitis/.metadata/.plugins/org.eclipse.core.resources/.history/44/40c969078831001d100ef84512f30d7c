/*
 * Copyright (c) 2012 Xilinx, Inc.  All rights reserved.
 *
 * Xilinx, Inc.
 * XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS" AS A
 * COURTESY TO YOU.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION AS
 * ONE POSSIBLE   IMPLEMENTATION OF THIS FEATURE, APPLICATION OR
 * STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS IMPLEMENTATION
 * IS FREE FROM ANY CLAIMS OF INFRINGEMENT, AND YOU ARE RESPONSIBLE
 * FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE FOR YOUR IMPLEMENTATION.
 * XILINX EXPRESSLY DISCLAIMS ANY WARRANTY WHATSOEVER WITH RESPECT TO
 * THE ADEQUACY OF THE IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO
 * ANY WARRANTIES OR REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE
 * FROM CLAIMS OF INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

#include <stdio.h>
#include "uart.h"


int main()
{
	int err=0;
	uint8_t recvbuf[256];
	uint8_t testbuf[10] = {9,8,7,6,5,4,3,2,1,0};

	SerialPort serial_ttyUL1_ptr;
	SerialPort serial_ttyPS1_ptr;

	//serial port init UARTLITE & UART0_PS
	serial_ttyUL1_ptr = SerialPort_create("/dev/ttyUL1", 115200, 8, 0, 1);

	if(SerialPort_open(serial_ttyUL1_ptr)==false)
	{
	   printf("ttyUL1 Serial port open failed!\n");
	   return -1;
	}
	printf("ttyUL1 Serial port open succeeded!\n");

	serial_ttyPS1_ptr = SerialPort_create("/dev/ttyPS1", 115200, 8, 0, 1);

	if(SerialPort_open(serial_ttyPS1_ptr)==false)
	{
	   printf("ttyPS1 Serial port open failed!\n");
	   return -1;
	}
	printf("ttyPS1 Serial port open succeeded!\n");

	while(1)
	{
		//send Serial port
//		if(SerialPort_write(serial_ttyUL1_ptr, testbuf, 0, 10)==0)
//		{
//			printf("ttyUL1 Serial send wrong!");
//		}

		while(1){
			int len = UART0_Recv(fd, recvbuf,sizeof(recvbuf));
			if(len > 0) {
				recvbuf[len] = '\0';
			    printf("receive data is %s\n",recvbuf);
			}
			else {
			    printf("cannot receive data\n");
			}
		}

		sleep(1);

	}

    return 0;
}
